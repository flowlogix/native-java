<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>me.lprimak-helidon</groupId>
    <artifactId>custom-mp</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.enablePreview>true</maven.compiler.enablePreview>
        <jakartaee.version>10.0.0</jakartaee.version>
        <jandex.version>3.1.6</jandex.version>
        <helidon.version>4.0.1</helidon.version>
        <weld.version>5.1.2.Final</weld.version>
        <slf4j.version>2.0.9</slf4j.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.30</version>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.cdi</groupId>
            <artifactId>helidon-microprofile-cdi</artifactId>
            <version>${helidon.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>io.helidon</groupId>
                    <artifactId>helidon</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.helidon.microprofile.weld</groupId>
                    <artifactId>weld-se-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>jakarta.inject</groupId>
                    <artifactId>jakarta.inject-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.logging</groupId>
            <artifactId>helidon-logging-jul</artifactId>
            <version>${helidon.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.smallrye</groupId>
            <artifactId>jandex</artifactId>
            <version>${jandex.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-core-api</artifactId>
            <version>${jakartaee.version}</version>
        </dependency>
        <dependency>
            <groupId>com.flowlogix</groupId>
            <artifactId>weld-repackaged</artifactId>
            <version>1.0-SNAPSHOT</version>
            <classifier>native</classifier>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-lite-extension-translator</artifactId>
                <version>${weld.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <proc>full</proc>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.smallrye</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <version>3.1.6</version>
                <dependencies>
                    <dependency>
                        <groupId>io.smallrye</groupId>
                        <artifactId>jandex</artifactId>
                        <version>${jandex.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>make-index</id>
                        <goals>
                            <goal>jandex</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.flowlogix.example.HelloEntryPoint</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>libs</classpathPrefix>
                            <useUniqueVersions>false</useUniqueVersions>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.1</version>
                <executions>
                    <execution>
                        <id>copy-libs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>runtime</includeScope>
                            <!-- Hack to work-around https://github.com/square/okio/issues/1306 -->
                            <excludeArtifactIds>okio</excludeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.graalvm.buildtools</groupId>
                    <artifactId>native-maven-plugin</artifactId>
                    <version>0.9.28</version>
                    <extensions>true</extensions>
                    <executions>
                        <execution>
                            <id>resource-config</id>
                            <phase>package</phase>
                            <configuration>
                                <!-- generate records for all module's resources -->
                                <isDetectionEnabled>true</isDetectionEnabled>
                            </configuration>
                        </execution>
                        <execution>
                            <id>build-native-image</id>
                            <phase>package</phase>
                            <configuration>
                                <!-- generate an argument file for native image - great for troubleshooting -->
                                <useArgFile>true</useArgFile>
                                <!-- this needs to be defined to have a single set of jars on classpath,
                                default approach would add classpath of module (from maven) and from jar (manifest) -->
                                <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                                <imageName>${project.build.finalName}</imageName>
                                <fallback>false</fallback>
                                <metadataRepository>
                                    <enabled>false</enabled>
                                </metadataRepository>
                                <buildArgs>
                                    <arg>--enable-preview</arg>
                                    <arg>-H:+UnlockExperimentalVMOptions</arg>
                                    <arg>-H:+DashboardAll</arg>
                                    <arg>-H:DashboardDump=${project.build.directory}/${project.build.finalName}</arg>
                                    <arg>-march=native</arg>
                                    <arg>--initialize-at-build-time=org.slf4j.jul.JDK14LoggerAdapter</arg>
                                    <!-- Some native image features use the svm dependencies which require additional exports -->
                                    <arg>--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.configure=ALL-UNNAMED</arg>
                                </buildArgs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>resource-config</id>
                                <goals>
                                    <goal>generateResourceConfig</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>build-native-image</id>
                                <goals>
                                    <goal>compile-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>io.helidon.integrations.graal</groupId>
                    <artifactId>helidon-mp-graal-native-image-extension</artifactId>
                    <version>${helidon.version}</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
